#!/bin/bash

# Clickdown ÏÑúÎ≤Ñ Ï§ëÏßÄ Ïä§ÌÅ¨Î¶ΩÌä∏
# ÏÑúÎ≤ÑÏôÄ ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏Î•º ÎèôÏãúÏóê Ï¢ÖÎ£åÌï©ÎãàÎã§

echo "üõë Stopping Clickdown..."
echo "=============================="

# ÏÉâÏÉÅ Ï†ïÏùò
RED='\033[0;31m'
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m' # No Color

# PID ÌååÏùº ÎîîÎ†âÌÜ†Î¶¨ ÌôïÏù∏
if [ ! -d ".pids" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  No PID files found${NC}"
fi

# Ï†ÄÏû•Îêú PIDÎ°ú ÌîÑÎ°úÏÑ∏Ïä§ Ï¢ÖÎ£å
if [ -f ".pids/server.pid" ]; then
    SERVER_PID=$(cat .pids/server.pid)
    echo -e "${BLUE}üñ•Ô∏è  Stopping server (PID: $SERVER_PID)...${NC}"
    
    if ps -p $SERVER_PID > /dev/null; then
        kill $SERVER_PID 2>/dev/null
        sleep 2
        
        # Í∞ïÏ†ú Ï¢ÖÎ£åÍ∞Ä ÌïÑÏöîÌïú Í≤ΩÏö∞
        if ps -p $SERVER_PID > /dev/null; then
            echo -e "${YELLOW}‚ö†Ô∏è  Force killing server...${NC}"
            kill -9 $SERVER_PID 2>/dev/null
        fi
        
        echo -e "${GREEN}‚úÖ Server stopped${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Server process not found${NC}"
    fi
    
    rm -f .pids/server.pid
fi

if [ -f ".pids/client.pid" ]; then
    CLIENT_PID=$(cat .pids/client.pid)
    echo -e "${BLUE}üåê Stopping client (PID: $CLIENT_PID)...${NC}"
    
    if ps -p $CLIENT_PID > /dev/null; then
        kill $CLIENT_PID 2>/dev/null
        sleep 2
        
        # Í∞ïÏ†ú Ï¢ÖÎ£åÍ∞Ä ÌïÑÏöîÌïú Í≤ΩÏö∞
        if ps -p $CLIENT_PID > /dev/null; then
            echo -e "${YELLOW}‚ö†Ô∏è  Force killing client...${NC}"
            kill -9 $CLIENT_PID 2>/dev/null
        fi
        
        echo -e "${GREEN}‚úÖ Client stopped${NC}"
    else
        echo -e "${YELLOW}‚ö†Ô∏è  Client process not found${NC}"
    fi
    
    rm -f .pids/client.pid
fi

# Ìè¨Ìä∏ Í∏∞Î∞òÏúºÎ°ú ÌîÑÎ°úÏÑ∏Ïä§ Ï∞æÏïÑÏÑú Ï¢ÖÎ£å (Ï∂îÍ∞Ä ÏïàÏ†ÑÏû•Ïπò)
echo -e "${BLUE}üîç Checking for remaining processes...${NC}"

# Ìè¨Ìä∏ 3001 (ÏÑúÎ≤Ñ) ÏÇ¨Ïö© ÌîÑÎ°úÏÑ∏Ïä§ Ï¢ÖÎ£å
SERVER_PORTS=$(lsof -ti:3001 2>/dev/null || true)
if [ ! -z "$SERVER_PORTS" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Found processes on port 3001, killing...${NC}"
    kill -9 $SERVER_PORTS 2>/dev/null || true
fi

# Ìè¨Ìä∏ 3000 (ÌÅ¥ÎùºÏù¥Ïñ∏Ìä∏) ÏÇ¨Ïö© ÌîÑÎ°úÏÑ∏Ïä§ Ï¢ÖÎ£å
CLIENT_PORTS=$(lsof -ti:3000 2>/dev/null || true)
if [ ! -z "$CLIENT_PORTS" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Found processes on port 3000, killing...${NC}"
    kill -9 $CLIENT_PORTS 2>/dev/null || true
fi

# Node.js ÌîÑÎ°úÏÑ∏Ïä§ Ï§ëÏóêÏÑú clickdown Í¥ÄÎ†® ÌîÑÎ°úÏÑ∏Ïä§ Ï∞æÏïÑÏÑú Ï¢ÖÎ£å
CLICKDOWN_PROCESSES=$(ps aux | grep -E "(clickdown|nodemon|next)" | grep -v grep | awk '{print $2}' || true)
if [ ! -z "$CLICKDOWN_PROCESSES" ]; then
    echo -e "${YELLOW}‚ö†Ô∏è  Found remaining clickdown processes, killing...${NC}"
    for pid in $CLICKDOWN_PROCESSES; do
        kill -9 $pid 2>/dev/null || true
    done
fi

# PID ÎîîÎ†âÌÜ†Î¶¨ Ï†ïÎ¶¨
rm -rf .pids

echo ""
echo -e "${GREEN}‚úÖ Clickdown stopped successfully${NC}"
echo "=============================="

# ÌîÑÎ°úÏÑ∏Ïä§ ÏÉÅÌÉú ÌôïÏù∏
echo -e "${BLUE}üîç Final process check:${NC}"
REMAINING_3001=$(lsof -ti:3001 2>/dev/null || true)
REMAINING_3000=$(lsof -ti:3000 2>/dev/null || true)

if [ -z "$REMAINING_3001" ] && [ -z "$REMAINING_3000" ]; then
    echo -e "${GREEN}‚úÖ All processes stopped successfully${NC}"
else
    echo -e "${RED}‚ö†Ô∏è  Some processes may still be running:${NC}"
    [ ! -z "$REMAINING_3001" ] && echo -e "${RED}  - Port 3001: $REMAINING_3001${NC}"
    [ ! -z "$REMAINING_3000" ] && echo -e "${RED}  - Port 3000: $REMAINING_3000${NC}"
fi

echo ""
echo -e "${YELLOW}üí° To start again: ./start.sh${NC}"